$base = <<BASE
sudo apt-get install -q -y wget unzip ca-certificates
sudo curl -s -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 > /usr/local/bin/jq
sudo chmod +x /usr/local/bin/jq
BASE

$vault_install = <<VAULT_INST
VAULT=0.8.3
VAULT_ZIP=/vagrant/bin/vault_${VAULT}_linux_amd64.zip
if [ ! -f $VAULT_ZIP ]; then
  mkdir -p /vagrant/bin
  wget https://releases.hashicorp.com/vault/${VAULT}/vault_${VAULT}_linux_amd64.zip --quiet -O $VAULT_ZIP
fi
cd /tmp
unzip -q $VAULT_ZIP >/dev/null
sudo chmod +x vault
sudo mv vault /usr/local/bin
sudo chmod 0755 /usr/local/bin/vault
sudo chown root:root /usr/local/bin/vault
VAULT_INST

$vault_env = <<VAULT_ENV
sudo cat << EOF > /etc/profile.d/vault.sh
export VAULT_ADDR="http://192.168.50.101:8200"
export VAULT_SKIP_VERIFY=true
EOF
VAULT_ENV

$vault_run = <<VAULT_RUN
nohup /usr/local/bin/vault server -dev \
  -dev-root-token-id="password" \
  -dev-listen-address="0.0.0.0:8200" 0<&- &>/dev/null &
VAULT_RUN

$hosts_file = <<HOSTS_FILE
sudo cat << EOF >> /etc/hosts
192.168.50.100  elk elk.example.com
192.168.50.101  vault vault.example.com
EOF
HOSTS_FILE

$vault_audit = <<VAULT_AUDIT
while ! nc -z 192.168.50.100 12345; do
  echo 'Waiting for logstash port to open...'
  sleep 5
done
vault auth password
vault audit-enable file file_path=/var/log/vault_audit.log
vault audit-enable syslog tag="vault"
vault audit-enable socket address="192.168.50.100:12345" socket_type="tcp"
VAULT_AUDIT

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--cpus", "1"]
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
    vb.customize ["modifyvm", :id, "--chipset", "ich9"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
  end
  config.vm.define "elk" do |elk|
    elk.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "8192"]
    end
    elk.vm.network :private_network, ip: "192.168.50.100"
    elk.vm.network "forwarded_port", guest: 5601, host: 5601
    elk.vm.box = "bento/ubuntu-16.04"
    elk.vm.hostname = "elk"
    elk.vm.provision "shell", inline: $hosts_file
    elk.vm.provision "docker" do |d|
      d.run "docker.elastic.co/elasticsearch/elasticsearch:5.6.2",
      args: "--name elasticsearch --net=host -e 'discovery.type=single-node'"
      d.run "docker.elastic.co/kibana/kibana:5.6.2",
      args: "--name kibana --net=host -e 'ELASTICSEARCH_URL=http://localhost:9200'"
      d.run "docker.elastic.co/logstash/logstash:5.6.2",
      args: "--name logstash --net=host -it -v /vagrant/pipeline/:/usr/share/logstash/pipeline/ -v /vagrant/logstash.yml:/usr/share/logstash/config/logstash.yml"
    end
  end
  config.vm.define "vault" do |vault|
    vault.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "1024"]
    end
    vault.vm.network :private_network, ip: "192.168.50.101"
    vault.vm.box = "bento/ubuntu-16.04"
    vault.vm.hostname = "vault"
    vault.vm.provision "shell", inline: $base
    vault.vm.provision "shell", inline: $vault_install
    vault.vm.provision "shell", inline: $vault_env
    vault.vm.provision "shell", inline: $vault_run, run: 'always'
    vault.vm.provision "shell", inline: $hosts_file
    vault.vm.provision "shell", inline: $vault_audit, run: 'always'
  end
end
